openapi: 3.0.3
info:
  title: API Documentation
  description: API for a service platform with authentication, categories, ads, admin, chat, complaints, job requests, listings, notifications, offers, payments, reviews, settings, users, and verification
  version: 1.0.0
servers:
  - url: /api
    description: Local development server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        Enter a valid JWT token (access token for most endpoints, or refresh token for `/auth/refresh`) in the format `Bearer <your-token>`.
        For `/auth/refresh`, use the refresh token obtained from `/auth/login` in the `Authorization` header.
        In Swagger UI, click the "Authorize" button, enter the token (without the "Bearer" prefix), and it will be applied to the endpoint.
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
        email:
          type: string
        name:
          type: object
          properties:
            first:
              type: string
            last:
              type: string
        phone:
          type: string
        avatarUrl:
          type: string
        roles:
          type: array
          items:
            type: string
        isPremium:
          type: boolean
        isTopRated:
          type: boolean
        isVerified:
          type: boolean
        totalJobsCompleted:
          type: number
    Category:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        description:
          type: string
        isActive:
          type: boolean
    Ad:
      type: object
      properties:
        _id:
          type: string
        type:
          type: string
        title:
          type: string
        description:
          type: string
        imageUrl:
          type: string
        targetUrl:
          type: string
        duration:
          type: number
        advertiserId:
          $ref: '#/components/schemas/User'
    Conversation:
      type: object
      properties:
        _id:
          type: string
        participants:
          type: object
          properties:
            seeker:
              $ref: '#/components/schemas/User'
            provider:
              $ref: '#/components/schemas/User'
        jobRequestId:
          type: string
        isActive:
          type: boolean
    Complaint:
      type: object
      properties:
        _id:
          type: string
        reporterId:
          $ref: '#/components/schemas/User'
        reportedUserId:
          $ref: '#/components/schemas/User'
        jobRequestId:
          type: string
        problemType:
          type: string
          enum: ['late', 'no_show', 'incomplete_work', 'poor_quality', 'rude_behavior', 'price_dispute', 'other']
        description:
          type: string
        status:
          type: string
          enum: ['pending', 'investigating', 'resolved', 'dismissed']
    JobRequest:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        description:
          type: string
        category:
          type: string
        seeker:
          $ref: '#/components/schemas/User'
        assignedTo:
          $ref: '#/components/schemas/User'
        status:
          type: string
          enum: ['open', 'assigned', 'completed', 'cancelled']
        budget:
          type: object
          properties:
            min:
              type: number
            max:
              type: number
    ServiceListing:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        description:
          type: string
        provider:
          $ref: '#/components/schemas/User'
        category:
          type: string
        price:
          type: object
          properties:
            amount:
              type: number
        status:
          type: string
          enum: ['active', 'inactive', 'archived']
    Notification:
      type: object
      properties:
        _id:
          type: string
        userId:
          $ref: '#/components/schemas/User'
        type:
          type: string
        message:
          type: string
        isRead:
          type: boolean
    Offer:
      type: object
      properties:
        _id:
          type: string
        jobRequest:
          $ref: '#/components/schemas/JobRequest'
        provider:
          $ref: '#/components/schemas/User'
        proposedPrice:
          type: number
        proposedDeliveryTime:
          type: string
        status:
          type: string
          enum: ['pending', 'accepted', 'rejected']
    Payment:
      type: object
      properties:
        _id:
          type: string
        conversationId:
          type: string
        jobRequestId:
          type: string
        seekerId:
          $ref: '#/components/schemas/User'
        providerId:
          $ref: '#/components/schemas/User'
        stripeSessionId:
          type: string
        amount:
          type: number
        currency:
          type: string
        status:
          type: string
          enum: ['pending', 'completed']
    Review:
      type: object
      properties:
        _id:
          type: string
        reviewer:
          $ref: '#/components/schemas/User'
        reviewedUser:
          $ref: '#/components/schemas/User'
        role:
          type: string
          enum: ['seeker', 'provider']
        rating:
          type: number
        comment:
          type: string
        jobRequest:
          type: string
        serviceListing:
          type: string
    UpgradeRequest:
      type: object
      properties:
        _id:
          type: string
        userId:
          $ref: '#/components/schemas/User'
        status:
          type: string
          enum: ['pending', 'accepted', 'rejected']
        adminExplanation:
          type: string
        rejectionComment:
          type: string
    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          default: false
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            details:
              type: array
              items:
                type: object
                properties:
                  field:
                    type: string
                  message:
                    type: string
                  value:
                    type: string
        timestamp:
          type: string
          format: date-time
paths:
  /auth/register:
    post:
      summary: Register a new user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                name:
                  type: object
                  properties:
                    first:
                      type: string
                    last:
                      type: string
                phone:
                  type: string
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
                      message:
                        type: string
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict (duplicate email/phone)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/check-availability:
    post:
      summary: Check email and phone availability
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                phone:
                  type: string
      responses:
        '200':
          description: Availability check completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      emailAvailable:
                        type: boolean
                      phoneAvailable:
                        type: boolean
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/login:
    post:
      summary: Login user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
                      accessToken:
                        type: string
                      refreshToken:
                        type: string
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/logout:
    post:
      summary: Logout user
      tags: [Auth]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/refresh:
    post:
      summary: Refresh access token
      description: |
        Refreshes the access token using a valid refresh token provided in the request body as a JSON object with a `refreshToken` field.
        In Swagger UI:
        1. Send a POST request to this endpoint with the refresh token obtained from `/auth/login` in the request body:
        ```json
        {
          "refreshToken": "your-refresh-token"
        }
        ```
        To obtain the refresh token, send a POST request to `/auth/login` with valid credentials:
        ```json
        {
          "email": "user@example.com",
          "password": "your-password"
        }
        ```
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
                  description: The refresh token obtained from /auth/login
              required:
                - refreshToken
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      accessToken:
                        type: string
                        description: The new access token
                      refreshToken:
                        type: string
                        description: A new refresh token (optional, if rotated)
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Missing or invalid refresh token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /categories:
    get:
      summary: Get all categories
      tags: [Categories]
      parameters:
        - in: query
          name: includeInactive
          schema:
            type: boolean
          description: Include inactive categories
      responses:
        '200':
          description: Categories retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      categories:
                        type: array
                        items:
                          $ref: '#/components/schemas/Category'
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Create a new category
      tags: [Categories]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                isActive:
                  type: boolean
      responses:
        '201':
          description: Category created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      category:
                        $ref: '#/components/schemas/Category'
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict (category already exists)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /categories/{id}:
    get:
      summary: Get category by ID
      tags: [Categories]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Category retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      category:
                        $ref: '#/components/schemas/Category'
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '404':
          description: Category not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update category
      tags: [Categories]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                isActive:
                  type: boolean
      responses:
        '200':
          description: Category updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      category:
                        $ref: '#/components/schemas/Category'
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Category not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete category
      tags: [Categories]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Category deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '404':
          description: Category not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /ads:
    post:
      summary: Create a new advertisement
      tags: [Ads]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                title:
                  type: string
                description:
                  type: string
                imageUrl:
                  type: string
                targetUrl:
                  type: string
                duration:
                  type: number
      responses:
        '201':
          description: Ad created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Ad'
                  message:
                    type: string
        '400':
          description: Missing required fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /ads/{id}:
    get:
      summary: Get ad by ID
      tags: [Ads]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ad retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Ad'
                  message:
                    type: string
        '404':
          description: Ad not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete ad
      tags: [Ads]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ad deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '403':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Ad not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /ads/{id}/checkout:
    post:
      summary: Create checkout session for ad purchase
      tags: [Ads]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Checkout session created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      session:
                        type: object
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /ads/active:
    get:
      summary: Get active ads for display
      tags: [Ads]
      parameters:
        - in: query
          name: filters
          schema:
            type: object
      responses:
        '200':
          description: Active ads retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Ad'
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /ads/my-ads:
    get:
      summary: Get user's ads
      tags: [Ads]
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: filters
          schema:
            type: object
      responses:
        '200':
          description: User's ads retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Ad'
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /ads/stats:
    get:
      summary: Get ad statistics
      tags: [Ads]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Ad statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /ads/{id}/status:
    patch:
      summary: Update ad status
      tags: [Ads]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                adminNotes:
                  type: string
      responses:
        '200':
          description: Ad status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Ad'
                  message:
                    type: string
        '400':
          description: Missing status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /ads/{id}/impression:
    post:
      summary: Track ad impression
      tags: [Ads]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Impression tracked successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /ads/{id}/click:
    post:
      summary: Track ad click
      tags: [Ads]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Click tracked successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/stats:
    get:
      summary: Get dashboard statistics for admin overview
      tags: [Admin]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Dashboard statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/charts/user-growth:
    get:
      summary: Get user growth data for charts
      tags: [Admin]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User growth data retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/charts/service-categories:
    get:
      summary: Get service categories data for charts
      tags: [Admin]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Service categories data retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/charts/revenue:
    get:
      summary: Get revenue data for charts
      tags: [Admin]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Revenue data retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/activity:
    get:
      summary: Get recent activity data
      tags: [Admin]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Recent activity data retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/upgrade-requests:
    get:
      summary: List all upgrade requests
      tags: [Admin]
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum: ['all', 'pending', 'accepted', 'rejected']
        - in: query
          name: search
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: Upgrade requests retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      requests:
                        type: array
                        items:
                          $ref: '#/components/schemas/UpgradeRequest'
                      total:
                        type: integer
                      page:
                        type: integer
                      limit:
                        type: integer
                      totalPages:
                        type: integer
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/upgrade-requests/{id}/accept:
    post:
      summary: Accept an upgrade request
      tags: [Admin]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                adminExplanation:
                  type: string
      responses:
        '200':
          description: Upgrade request accepted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      request:
                        $ref: '#/components/schemas/UpgradeRequest'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Request not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/upgrade-requests/{id}/reject:
    post:
      summary: Reject an upgrade request
      tags: [Admin]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rejectionComment:
                  type: string
      responses:
        '200':
          description: Upgrade request rejected successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      request:
                        $ref: '#/components/schemas/UpgradeRequest'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Request not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /conversations:
    get:
      summary: Get user's conversations
      tags: [Chat]
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: Conversations retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      conversations:
                        type: array
                        items:
                          $ref: '#/components/schemas/Conversation'
                      pagination:
                        type: object
                        properties:
                          page:
                            type: integer
                          limit:
                            type: integer
                          total:
                            type: integer
                          totalPages:
                            type: integer
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /conversations/{conversationId}:
    get:
      summary: Get a single conversation by ID
      tags: [Chat]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: conversationId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Conversation retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      conversation:
                        $ref: '#/components/schemas/Conversation'
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Conversation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /conversations/{conversationId}/messages:
    get:
      summary: Get messages for a conversation
      tags: [Chat]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: conversationId
          required: true
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: Messages retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      messages:
                        type: array
                        items:
                          type: object
                      pagination:
                        type: object
                        properties:
                          page:
                            type: integer
                          limit:
                            type: integer
                          total:
                            type: integer
                          totalPages:
                            type: integer
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /conversations/{conversationId}/read:
    post:
      summary: Mark messages as read
      tags: [Chat]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: conversationId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Messages marked as read
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      readCount:
                        type: integer
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /conversations/job-request/{jobRequestId}:
    get:
      summary: Get conversation by job request ID
      tags: [Chat]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: jobRequestId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Conversation retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Conversation'
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Conversation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /conversations/unread:
    get:
      summary: Get unread message count
      tags: [Chat]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Unread count retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      unreadCount:
                        type: integer
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /complaints:
    post:
      summary: Submit a new complaint
      tags: [Complaints]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reportedUserId:
                  type: string
                jobRequestId:
                  type: string
                problemType:
                  type: string
                  enum: ['late', 'no_show', 'incomplete_work', 'poor_quality', 'rude_behavior', 'price_dispute', 'other']
                description:
                  type: string
      responses:
        '201':
          description: Complaint submitted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      complaint:
                        $ref: '#/components/schemas/Complaint'
                  message:
                    type: string
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/complaints:
    get:
      summary: Get complaints for admin
      tags: [Complaints]
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum: ['all', 'pending', 'investigating', 'resolved', 'dismissed']
        - in: query
          name: search
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: Complaints retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      complaints:
                        type: array
                        items:
                          $ref: '#/components/schemas/Complaint'
                      total:
                        type: integer
                      page:
                        type: integer
                      limit:
                        type: integer
                      totalPages:
                        type: integer
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/complaints/{id}:
    patch:
      summary: Update complaint status and admin action
      tags: [Complaints]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: ['pending', 'investigating', 'resolved', 'dismissed']
                adminAction:
                  type: string
                  enum: ['warning', 'suspension', 'ban', 'refund', 'none']
                adminNotes:
                  type: string
                actionType:
                  type: string
      responses:
        '200':
          description: Complaint updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      complaint:
                        $ref: '#/components/schemas/Complaint'
                  message:
                    type: string
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Complaint not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/complaints/stats:
    get:
      summary: Get complaint statistics for admin dashboard
      tags: [Complaints]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Complaint statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      total:
                        type: integer
                      pending:
                        type: integer
                      investigating:
                        type: integer
                      byStatus:
                        type: object
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/complaints/{id}/actions:
    get:
      summary: Get admin actions for a specific complaint
      tags: [Complaints]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: Complaint actions retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      actions:
                        type: array
                        items:
                          type: object
                      total:
                        type: integer
                      page:
                        type: integer
                      limit:
                        type: integer
                      totalPages:
                        type: integer
        '404':
          description: Complaint not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /requests:
    post:
      summary: Create a new job request
      tags: [JobRequests]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                category:
                  type: string
                budget:
                  type: object
                  properties:
                    min:
                      type: number
                    max:
                      type: number
                deadline:
                  type: string
                  format: date-time
      responses:
        '201':
          description: Job request created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      jobRequest:
                        $ref: '#/components/schemas/JobRequest'
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: Get all job requests with filtering
      tags: [JobRequests]
      parameters:
        - in: query
          name: category
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
        - in: query
          name: minBudget
          schema:
            type: number
        - in: query
          name: maxBudget
          schema:
            type: number
        - in: query
          name: lat
          schema:
            type: number
        - in: query
          name: lng
          schema:
            type: number
        - in: query
          name: radius
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: Job requests retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      jobRequests:
                        type: array
                        items:
                          $ref: '#/components/schemas/JobRequest'
                      pagination:
                        type: object
                        properties:
                          page:
                            type: integer
                          limit:
                            type: integer
                          totalCount:
                            type: integer
                          totalPages:
                            type: integer
                          hasNext:
                            type: boolean
                          hasPrev:
                            type: boolean
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /requests/{id}:
    get:
      summary: Get job request by ID
      tags: [JobRequests]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Job request retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      jobRequest:
                        $ref: '#/components/schemas/JobRequest'
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '404':
          description: Job request not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      summary: Update job request
      tags: [JobRequests]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                category:
                  type: string
                budget:
                  type: object
                  properties:
                    min:
                      type: number
                    max:
                      type: number
                deadline:
                  type: string
                  format: date-time
      responses:
        '200':
          description: Job request updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      jobRequest:
                        $ref: '#/components/schemas/JobRequest'
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Job request not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete job request
      tags: [JobRequests]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Job request deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Job request not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users/me/requests:
    get:
      summary: Get job requests by current user (seeker)
      tags: [JobRequests]
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: Job requests retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      jobRequests:
                        type: array
                        items:
                          $ref: '#/components/schemas/JobRequest'
                      pagination:
                        type: object
                        properties:
                          page:
                            type: integer
                          limit:
                            type: integer
                          totalCount:
                            type: integer
                          totalPages:
                            type: integer
                          hasNext:
                            type: boolean
                          hasPrev:
                            type: boolean
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /requests/{id}/offers:
    get:
      summary: Get all offers for a specific job request
      tags: [JobRequests]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
      responses:
        '200':
          description: Offers retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      offers:
                        type: array
                        items:
                          $ref: '#/components/schemas/Offer'
                      totalCount:
                        type: integer
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Job request not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /requests/{id}/assign/{offerId}:
    post:
      summary: Assign a selected offer to the job request
      tags: [JobRequests]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: offerId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Offer assigned successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /requests/{id}/complete:
    post:
      summary: Mark a job request as completed
      tags: [JobRequests]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Job request completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Job request not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /requests/{id}/review:
    post:
      summary: Submit a review for a job request
      tags: [JobRequests]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rating:
                  type: number
                comment:
                  type: string
      responses:
        '201':
          description: Review submitted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      review:
                        $ref: '#/components/schemas/Review'
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Job request not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict (already reviewed)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users/me/listings:
    get:
      summary: List current provider's service listings
      tags: [Listings]
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: Listings retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      listings:
                        type: array
                        items:
                          $ref: '#/components/schemas/ServiceListing'
                      pagination:
                        type: object
                        properties:
                          page:
                            type: integer
                          limit:
                            type: integer
                          totalCount:
                            type: integer
                          totalPages:
                            type: integer
                          hasNext:
                            type: boolean
                          hasPrev:
                            type: boolean
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /listings:
    post:
      summary: Create a new service listing
      tags: [Listings]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                category:
                  type: string
                price:
                  type: object
                  properties:
                    amount:
                      type: number
                deliveryTimeDays:
                  type: integer
      responses:
        '201':
          description: Listing created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      listing:
                        $ref: '#/components/schemas/ServiceListing'
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: Get all listings (public, with search/filter)
      tags: [Listings]
      parameters:
        - in: query
          name: category
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
        - in: query
          name: minPrice
          schema:
            type: number
        - in: query
          name: maxPrice
          schema:
            type: number
        - in: query
          name: deliveryTimeDays
          schema:
            type: integer
        - in: query
          name: provider
          schema:
            type: string
        - in: query
          name: search
          schema:
            type: string
        - in: query
          name: premiumOnly
          schema:
            type: boolean
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: Listings retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      listings:
                        type: array
                        items:
                          $ref: '#/components/schemas/ServiceListing'
                      pagination:
                        type: object
                        properties:
                          page:
                            type: integer
                          limit:
                            type: integer
                          totalCount:
                            type: integer
                          totalPages:
                            type: integer
                          hasNext:
                            type: boolean
                          hasPrev:
                            type: boolean
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /listings/{id}:
    get:
      summary: Get a single listing by ID
      tags: [Listings]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Listing retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      listing:
                        $ref: '#/components/schemas/ServiceListing'
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '404':
          description: Listing not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      summary: Update own listing
      tags: [Listings]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                category:
                  type: string
                price:
                  type: object
                  properties:
                    amount:
                      type: number
                deliveryTimeDays:
                  type: integer
      responses:
        '200':
          description: Listing updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      listing:
                        $ref: '#/components/schemas/ServiceListing'
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Listing not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete (archive) own listing
      tags: [Listings]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Listing archived successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      listing:
                        $ref: '#/components/schemas/ServiceListing'
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '404':
          description: Listing not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /notifications:
    get:
      summary: List notifications for the current user
      tags: [Notifications]
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: Notifications retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      notifications:
                        type: array
                        items:
                          $ref: '#/components/schemas/Notification'
                      pagination:
                        type: object
                        properties:
                          page:
                            type: integer
                          limit:
                            type: integer
                          total:
                            type: integer
                          totalPages:
                            type: integer
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /notifications/{id}:
    patch:
      summary: Mark a notification as read
      tags: [Notifications]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Notification marked as read
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      notification:
                        $ref: '#/components/schemas/Notification'
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '404':
          description: Notification not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /notifications/mark-all-read:
    patch:
      summary: Mark all notifications as read for the user
      tags: [Notifications]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: All notifications marked as read
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      modifiedCount:
                        type: integer
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /notifications/{id}/delete:
    delete:
      summary: Delete a notification
      tags: [Notifications]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Notification deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '404':
          description: Notification not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /offers/{id}:
    post:
      summary: Create an offer for a job request
      tags: [Offers]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                proposedPrice:
                  type: number
                proposedDeliveryTime:
                  type: string
                  format: date-time
                description:
                  type: string
      responses:
        '201':
          description: Offer created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Offer'
                  message:
                    type: string
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: Get a specific offer by ID
      tags: [Offers]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Offer retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Offer'
                  message:
                    type: string
        '403':
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Offer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      summary: Update an offer
      tags: [Offers]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                proposedPrice:
                  type: number
                proposedDeliveryTime:
                  type: string
                  format: date-time
                description:
                  type: string
      responses:
        '200':
          description: Offer updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Offer'
                  message:
                    type: string
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Offer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete/withdraw an offer
      tags: [Offers]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Offer deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                  message:
                    type: string
        '403':
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /payments/checkout:
    post:
      summary: Create a checkout session for a payment
      tags: [Payments]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jobRequestId:
                  type: string
                amount:
                  type: number
                currency:
                  type: string
      responses:
        '200':
          description: Checkout session created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      session:
                        type: object
                        properties:
                          id:
                            type: string
                          url:
                            type: string
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /payments/{id}:
    get:
      summary: Get payment details by ID
      tags: [Payments]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Payment details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Payment'
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '404':
          description: Payment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users/me/payments:
    get:
      summary: Get payment history for the current user
      tags: [Payments]
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: Payment history retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      payments:
                        type: array
                        items:
                          $ref: '#/components/schemas/Payment'
                      pagination:
                        type: object
                        properties:
                          page:
                            type: integer
                          limit:
                            type: integer
                          total:
                            type: integer
                          totalPages:
                            type: integer
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /reviews:
    get:
      summary: Get reviews for a specific user or listing
      tags: [Reviews]
      parameters:
        - in: query
          name: userId
          schema:
            type: string
        - in: query
          name: listingId
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: Reviews retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      reviews:
                        type: array
                        items:
                          $ref: '#/components/schemas/Review'
                      pagination:
                        type: object
                        properties:
                          page:
                            type: integer
                          limit:
                            type: integer
                          total:
                            type: integer
                          totalPages:
                            type: integer
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /settings:
    get:
      summary: Get user settings
      tags: [Settings]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Settings retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      settings:
                        type: object
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      summary: Update user settings
      tags: [Settings]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                notifications:
                  type: object
                  properties:
                    email:
                      type: boolean
                    push:
                      type: boolean
                privacy:
                  type: object
                  properties:
                    showPhone:
                      type: boolean
                    showEmail:
                      type: boolean
      responses:
        '200':
          description: Settings updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      settings:
                        type: object
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users:
    get:
      summary: Search users
      tags: [Users]
      parameters:
        - in: query
          name: search
          schema:
            type: string
        - in: query
          name: role
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: Users retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      users:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'
                      pagination:
                        type: object
                        properties:
                          page:
                            type: integer
                          limit:
                            type: integer
                          total:
                            type: integer
                          totalPages:
                            type: integer
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users/me:
    get:
      summary: Get current user profile
      tags: [Users]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/User'
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      summary: Update current user profile
      tags: [Users]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                name:
                  type: object
                  properties:
                    first:
                      type: string
                    last:
                      type: string
                phone:
                  type: string
                avatarUrl:
                  type: string
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/User'
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users/{id}:
    get:
      summary: Get user profile by ID
      tags: [Users]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/User'
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users/me/upgrade:
    post:
      summary: Request account upgrade to premium or provider
      tags: [Users]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  enum: ['premium', 'provider']
      responses:
        '201':
          description: Upgrade request created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/UpgradeRequest'
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict (request already exists)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users/me/verification:
    post:
      summary: Submit verification documents
      tags: [Verification]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                document:
                  type: string
                  format: binary
                documentType:
                  type: string
                  enum: ['id_card', 'passport', 'license']
      responses:
        '201':
          description: Verification document submitted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      verificationId:
                        type: string
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/verifications:
    get:
      summary: List all verification requests
      tags: [Verification]
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum: ['pending', 'approved', 'rejected']
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: Verification requests retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      verifications:
                        type: array
                        items:
                          type: object
                      total:
                        type: integer
                      page:
                        type: integer
                      limit:
                        type: integer
                      totalPages:
                        type: integer
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/verifications/{id}/approve:
    post:
      summary: Approve a verification request
      tags: [Verification]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Verification approved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      verification:
                        type: object
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '404':
          description: Verification not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/verifications/{id}/reject:
    post:
      summary: Reject a verification request
      tags: [Verification]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rejectionReason:
                  type: string
      responses:
        '200':
          description: Verification rejected successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      verification:
                        type: object
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
        '404':
          description: Verification not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'